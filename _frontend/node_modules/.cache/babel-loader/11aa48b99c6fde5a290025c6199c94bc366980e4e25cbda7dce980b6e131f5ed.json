{"ast":null,"code":"var _jsxFileName = \"/Users/yujis/Documents/Python/django/submit-todo-app/_frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Todo from \"./Todo\";\nimport { fetchTodosAPI, createTodoAPI, updateTodoAPI, deleteTodoAPI } from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  // 登録済みのtodoを全て取得\n  useEffect(() => {\n    fetchTodosAPI(setTodos);\n  }, []);\n  const addTodo = async () => {\n    if (newTodo.trim() !== \"\") {\n      const todo = {\n        title: newTodo,\n        completed: false\n      };\n      await createTodoAPI(todo);\n      await fetchTodosAPI(setTodos);\n      setNewTodo(\"\");\n    } else {\n      console.error(\"ValidationError: addItem must not be empty.\");\n    }\n  };\n  const updateTodo = async todo => {\n    var _prompt;\n    const userInput = (_prompt = prompt(`Update Item: ${todo.title}`, todo.title)) !== null && _prompt !== void 0 ? _prompt : \"\";\n    if (userInput !== \"\") {\n      const updateTodoItem = {\n        id: todo.id,\n        title: userInput,\n        completed: todo.completed\n      };\n      await updateTodoAPI(updateTodoItem);\n      await fetchTodosAPI(setTodos);\n    } else {\n      console.error(\"ValidationError: updateItem must not be empty.\");\n    }\n  };\n  const deleteTodo = async id => {\n    await deleteTodoAPI(id);\n    await fetchTodosAPI(setTodos);\n    console.log(`Succeed to delete todo.`);\n  };\n  const toggleTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Add a new todo\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary ms-3\",\n          type: \"button\",\n          onClick: addTodo,\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        toggleTodo: toggleTodo,\n        updateTodo: updateTodo,\n        deleteTodo: deleteTodo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HJloPNBkTiO05UC91Qpj9J5a300=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Todo","fetchTodosAPI","createTodoAPI","updateTodoAPI","deleteTodoAPI","jsxDEV","_jsxDEV","App","_s","todos","setTodos","newTodo","setNewTodo","addTodo","trim","todo","title","completed","console","error","updateTodo","_prompt","userInput","prompt","updateTodoItem","id","deleteTodo","log","toggleTodo","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/yujis/Documents/Python/django/submit-todo-app/_frontend/src/App.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Todo from \"./Todo\";\nimport {\n  fetchTodosAPI,\n  createTodoAPI,\n  updateTodoAPI,\n  deleteTodoAPI,\n} from \"./Api\";\nimport { TodoInterface, NewTodoInterface } from \"./TodoInterface\";\n\nfunction App() {\n  const [todos, setTodos] = useState<\n    Array<{ id: string; title: string; completed: boolean }>\n  >([]);\n  const [newTodo, setNewTodo] = useState<string>(\"\");\n\n  // 登録済みのtodoを全て取得\n  useEffect(() => {\n    fetchTodosAPI(setTodos);\n  }, []);\n\n  const addTodo = async (): Promise<void> => {\n    if (newTodo.trim() !== \"\") {\n      const todo: NewTodoInterface = {\n        title: newTodo,\n        completed: false,\n      };\n      await createTodoAPI(todo);\n      await fetchTodosAPI(setTodos);\n      setNewTodo(\"\");\n    } else {\n      console.error(\"ValidationError: addItem must not be empty.\");\n    }\n  };\n\n  const updateTodo = async (todo: TodoInterface): Promise<void> => {\n    const userInput: string =\n      prompt(`Update Item: ${todo.title}`, todo.title) ?? \"\";\n    if (userInput !== \"\") {\n      const updateTodoItem: TodoInterface = {\n        id: todo.id,\n        title: userInput,\n        completed: todo.completed,\n      };\n      await updateTodoAPI(updateTodoItem);\n      await fetchTodosAPI(setTodos);\n    } else {\n      console.error(\"ValidationError: updateItem must not be empty.\");\n    }\n  };\n\n  const deleteTodo = async (id: string): Promise<void> => {\n    await deleteTodoAPI(id);\n    await fetchTodosAPI(setTodos);\n    console.log(`Succeed to delete todo.`);\n  };\n\n  const toggleTodo = (id: string) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"mb-4\">Todo App</h1>\n      <div className=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Add a new todo\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n        />\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-primary ms-3\"\n            type=\"button\"\n            onClick={addTodo}\n          >\n            Add Todo\n          </button>\n        </div>\n      </div>\n      <ul className=\"list-group\">\n        {todos.map((todo) => (\n          <Todo\n            key={todo.id}\n            todo={todo}\n            toggleTodo={toggleTodo}\n            updateTodo={updateTodo}\n            deleteTodo={deleteTodo}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,SACEC,aAAa,EACbC,aAAa,EACbC,aAAa,EACbC,aAAa,QACR,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGf,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAEhC,EAAE,CAAC;EACL,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACdE,aAAa,CAACS,QAAQ,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,OAAO,GAAG,MAAAA,CAAA,KAA2B;IACzC,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzB,MAAMC,IAAsB,GAAG;QAC7BC,KAAK,EAAEL,OAAO;QACdM,SAAS,EAAE;MACb,CAAC;MACD,MAAMf,aAAa,CAACa,IAAI,CAAC;MACzB,MAAMd,aAAa,CAACS,QAAQ,CAAC;MAC7BE,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACLM,OAAO,CAACC,KAAK,CAAC,6CAA6C,CAAC;IAC9D;EACF,CAAC;EAED,MAAMC,UAAU,GAAG,MAAOL,IAAmB,IAAoB;IAAA,IAAAM,OAAA;IAC/D,MAAMC,SAAiB,IAAAD,OAAA,GACrBE,MAAM,CAAE,gBAAeR,IAAI,CAACC,KAAM,EAAC,EAAED,IAAI,CAACC,KAAK,CAAC,cAAAK,OAAA,cAAAA,OAAA,GAAI,EAAE;IACxD,IAAIC,SAAS,KAAK,EAAE,EAAE;MACpB,MAAME,cAA6B,GAAG;QACpCC,EAAE,EAAEV,IAAI,CAACU,EAAE;QACXT,KAAK,EAAEM,SAAS;QAChBL,SAAS,EAAEF,IAAI,CAACE;MAClB,CAAC;MACD,MAAMd,aAAa,CAACqB,cAAc,CAAC;MACnC,MAAMvB,aAAa,CAACS,QAAQ,CAAC;IAC/B,CAAC,MAAM;MACLQ,OAAO,CAACC,KAAK,CAAC,gDAAgD,CAAC;IACjE;EACF,CAAC;EAED,MAAMO,UAAU,GAAG,MAAOD,EAAU,IAAoB;IACtD,MAAMrB,aAAa,CAACqB,EAAE,CAAC;IACvB,MAAMxB,aAAa,CAACS,QAAQ,CAAC;IAC7BQ,OAAO,CAACS,GAAG,CAAE,yBAAwB,CAAC;EACxC,CAAC;EAED,MAAMC,UAAU,GAAIH,EAAU,IAAK;IACjCf,QAAQ,CACND,KAAK,CAACoB,GAAG,CAAEd,IAAI,IACbA,IAAI,CAACU,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGV,IAAI;MAAEE,SAAS,EAAE,CAACF,IAAI,CAACE;IAAU,CAAC,GAAGF,IAC7D,CACF,CAAC;EACH,CAAC;EAED,oBACET,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BzB,OAAA;MAAIwB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC7B,OAAA;MAAKwB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BzB,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXN,SAAS,EAAC,cAAc;QACxBO,WAAW,EAAC,gBAAgB;QAC5BC,KAAK,EAAE3B,OAAQ;QACf4B,QAAQ,EAAGC,CAAC,IAAK5B,UAAU,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACF7B,OAAA;QAAKwB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACjCzB,OAAA;UACEwB,SAAS,EAAC,sBAAsB;UAChCM,IAAI,EAAC,QAAQ;UACbM,OAAO,EAAE7B,OAAQ;UAAAkB,QAAA,EAClB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN7B,OAAA;MAAIwB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBtB,KAAK,CAACoB,GAAG,CAAEd,IAAI,iBACdT,OAAA,CAACN,IAAI;QAEHe,IAAI,EAAEA,IAAK;QACXa,UAAU,EAAEA,UAAW;QACvBR,UAAU,EAAEA,UAAW;QACvBM,UAAU,EAAEA;MAAW,GAJlBX,IAAI,CAACU,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAC3B,EAAA,CAzFQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA2FZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}